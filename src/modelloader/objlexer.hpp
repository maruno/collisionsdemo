#ifndef OBJLEXER_HPP
#define OBJLEXER_HPP

#include <iostream>

//Only include FlexLexer.h if it hasn't been already included
#if ! defined(yyFlexLexerOnce)
#include <FlexLexer.h>
#endif

//Override the interface for yylex since we namespaced it
#undef YY_DECL
#define YY_DECL int modelloader::ObjLexer::yylex()

//Include Bison for types/tokens
#include "src/modelloader/location.hh"

namespace modelloader {
	class ObjLexer : public yyFlexLexer {
	 private:
		std::string* yylval;
		location* yylloc;

		//Scanner generated by lex
		int yylex();
	 public:
		// constructor accepts the input and output streams
		// 0 means std equivilant (stdin, stdout)
		ObjLexer(std::istream* in = 0, std::ostream* out = 0) : yyFlexLexer(in, out) { }

		// overloaded version of yylex - we need a pointer to yylval and yylloc
		inline int yylex(std::string* lval, location* lloc);
	};

	int ObjLexer::yylex(std::string* lval, location* lloc) {
		yylval = lval;
		yylloc = lloc;

		return yylex();
	}
}

#endif // OBJLEXER_HPP
